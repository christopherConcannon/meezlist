[{"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\index.js":"1","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\App.js":"2","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\components\\Header.js":"3","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\pages\\HomePage.js":"4","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\components\\Listing.js":"5","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\components\\Loader.js":"6","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\components\\Message.js":"7","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\components\\FormContainer.js":"8","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\pages\\RegisterPage.js":"9","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\pages\\LoginPage.js":"10","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\pages\\ListingPage.js":"11","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\components\\Meta.js":"12","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\actions\\listingActions.js":"13","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\constants\\listingConstants.js":"14","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\actions\\userActions.js":"15","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\constants\\userConstants.js":"16","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\store.js":"17","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\reducers\\userReducers.js":"18","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\reducers\\listingReducers.js":"19","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\graphql\\queries.js":"20","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\ApolloProvider.js":"21","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\graphql\\mutations.js":"22","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\auth.js":"23"},{"size":342,"mtime":1614912947922,"results":"24","hashOfConfig":"25"},{"size":750,"mtime":1614912897816,"results":"26","hashOfConfig":"25"},{"size":1342,"mtime":1614891972037,"results":"27","hashOfConfig":"25"},{"size":1274,"mtime":1615156992049,"results":"28","hashOfConfig":"25"},{"size":874,"mtime":1615260022076,"results":"29","hashOfConfig":"25"},{"size":341,"mtime":1612323002976,"results":"30","hashOfConfig":"25"},{"size":274,"mtime":1612322987081,"results":"31","hashOfConfig":"25"},{"size":355,"mtime":1612323028346,"results":"32","hashOfConfig":"25"},{"size":3432,"mtime":1615580786076,"results":"33","hashOfConfig":"25"},{"size":2218,"mtime":1614891998482,"results":"34","hashOfConfig":"25"},{"size":2529,"mtime":1615340950747,"results":"35","hashOfConfig":"25"},{"size":504,"mtime":1612560190758,"results":"36","hashOfConfig":"25"},{"size":1160,"mtime":1615157777481,"results":"37","hashOfConfig":"25"},{"size":420,"mtime":1615157801784,"results":"38","hashOfConfig":"25"},{"size":1907,"mtime":1615580786078,"results":"39","hashOfConfig":"25"},{"size":384,"mtime":1615580786079,"results":"40","hashOfConfig":"25"},{"size":931,"mtime":1614804190434,"results":"41","hashOfConfig":"25"},{"size":1040,"mtime":1615580786082,"results":"42","hashOfConfig":"25"},{"size":1063,"mtime":1615157898536,"results":"43","hashOfConfig":"25"},{"size":577,"mtime":1615260008434,"results":"44","hashOfConfig":"25"},{"size":1046,"mtime":1614913148044,"results":"45","hashOfConfig":"25"},{"size":312,"mtime":1615580786081,"results":"46","hashOfConfig":"25"},{"size":1201,"mtime":1615565524962,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"gxuufq",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\index.js",[],["102","103"],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\App.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\components\\Header.js",["104"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../utils/actions/userActions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\n\r\nconst Header = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  \r\n  const logoutHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(logout())\r\n  }\r\n\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<Navbar bg='light' expand='lg' collapseOnSelect>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<LinkContainer to='/'>\r\n\t\t\t\t\t\t<Navbar.Brand>meezlist</Navbar.Brand>\r\n\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n\t\t\t\t\t<Navbar.Collapse id='basic-navbar-nav'>\r\n\t\t\t\t\t\t<Nav className='ml-auto'>\r\n\t\t\t\t\t\t\t{userInfo ? (\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Nav.Link onClick={logoutHandler}>logout</Nav.Link>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/register'>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link>sign up</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/login'>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link>login</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t</Container>\r\n\t\t\t</Navbar>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\pages\\HomePage.js",["105","106"],"import React, { useEffect } from 'react'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { GET_LISTINGS } from '../utils/graphql/queries'\r\nimport { listListings } from '../utils/actions/listingActions'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Listing from '../components/Listing'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\n\r\nconst HomePage = () => {\r\n\tconst { data, loading: queryLoading, error: queryError } = useQuery(GET_LISTINGS)\r\n\r\n\tconst listingList = useSelector((state) => state.listingList)\r\n\tconst { listings, loading, error } = listingList\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (data) {\r\n\t\t\t\tdispatch(listListings(data.getListings))\r\n\t\t\t}\r\n\t\t},\r\n\t\t[  data, dispatch ]\r\n\t)\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Meta />\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Loader />\r\n\t\t\t) : error ? (\r\n\t\t\t\t<Message variant='danger'>{error}</Message>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t{listings.map((listing) => (\r\n\t\t\t\t\t\t\t<Col key={listing._id} sm={12} md={6} lg={4} xl={3}>\r\n\t\t\t\t\t\t\t\t<Listing {...listing} />\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default HomePage\r\n","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\components\\Listing.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\components\\Loader.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\components\\Message.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\components\\FormContainer.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\pages\\RegisterPage.js",["107"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { REGISTER_USER } from '../utils/graphql/mutations'\r\nimport { registerUser } from '../utils/actions/userActions'\r\nimport Auth from '../utils/auth'\r\n\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n\tconst [ name, setName ] = useState('')\r\n\tconst [ email, setEmail ] = useState('')\r\n\tconst [ password, setPassword ] = useState('')\r\n\tconst [ confirmPassword, setConfirmPassword ] = useState('')\r\n\tconst [ message, setMessage ] = useState(null)\r\n\r\n\tconst [ register, { error: registerError } ] = useMutation(REGISTER_USER)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst userRegister = useSelector((state) => state.userRegister)\r\n\r\n\tconst { userInfo, loading, error } = userRegister\r\n\r\n\t// when userInfo has been added to global state (which depends on it having been added to db) redirect to HomeScreen\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userInfo) {\r\n\t\t\t\thistory.push('/')\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ history, userInfo ]\r\n\t)\r\n\r\n\tconst submitHandler = async (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\tsetMessage('Passwords do not match')\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tconst mutationResponse = await register({\r\n\t\t\t\t\tvariables : {\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\temail,\r\n\t\t\t\t\t\tpassword\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n        dispatch(registerUser(mutationResponse.data.register))\r\n\t\t\t\t// const token = mutationResponse.data.register.token\r\n\t\t\t\t// const userId = mutationResponse.data.register._id\r\n\t\t\t\t// Auth.login(userId, token)\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FormContainer>\r\n\t\t\t<h1>Sign Up</h1>\r\n\t\t\t{message && <Message variant='danger'>{message}</Message>}\r\n\t\t\t{error && <Message variant='danger'>{error}</Message>}\r\n\t\t\t{loading && <Loader />}\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t<Form.Group controlId='name'>\r\n\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group controlId='password'>\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group controlId='confirmPassword'>\r\n\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Confirm password'\r\n\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\tRegister\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\r\n\t\t\t<Row className='py-3'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\tHave an Account? <Link to={'/login'}>Login</Link>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</FormContainer>\r\n\t)\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\pages\\LoginPage.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\pages\\ListingPage.js",["108","109"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { GET_LISTING } from '../utils/graphql/queries'\r\nimport { listListingDetails, clearListing } from '../utils/actions/listingActions'\r\nimport { Row, Col, Image, ListGroup } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\n\r\nconst ListingPage = ({ match }) => {\r\n\tconst { data, loading: queryLoading, error: queryError } = useQuery(GET_LISTING, {\r\n\t\tvariables : {\r\n\t\t\tlistingId : match.params.id\r\n\t\t}\r\n\t})\r\n\r\n\tconst listingDetails = useSelector((state) => state.listingDetails)\r\n\tconst { listing, loading, error } = listingDetails\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (data) {\r\n\t\t\t\tdispatch(listListingDetails(data.getListing))\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ data, match, dispatch ]\r\n\t)\r\n\r\n\t// clean up getListing state when component unmounts\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\treturn () => dispatch(clearListing())\r\n\t\t},\r\n\t\t[ dispatch ]\r\n\t)\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Link className='btn btn-light my-3' to='/'>\r\n\t\t\t\tGo Back\r\n\t\t\t</Link>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Loader />\r\n\t\t\t) : error ? (\r\n\t\t\t\t<Message variant='danger'>{error}</Message>\r\n\t\t\t) : (\r\n\t\t\t\tlisting.images && (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Meta title={listing.title} />\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t{/* pass fluid prop to keep image in it's container */}\r\n\t\t\t\t\t\t\t\t\t<Image src={listing.images[0]} alt={listing.title} fluid />\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t<div className='listing-img-thumbs d-flex justify-content-start mt-3'>\r\n\t\t\t\t\t\t\t\t\t<Image src={listing.images[0]} alt={listing.title} className='mr-3' />\r\n\t\t\t\t\t\t\t\t\t<Image src={listing.images[0]} alt={listing.title} className='mr-3' />\r\n\t\t\t\t\t\t\t\t\t<Image src={listing.images[0]} alt={listing.title} className='mr-3' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t\t\t\t{/* Add the flush variant to remove outer borders and rounded corners */}\r\n\t\t\t\t\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<h3>{listing.title}</h3>\r\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>Price: ${listing.price}</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>Description: {listing.description}</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default ListingPage\r\n","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\components\\Meta.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\actions\\listingActions.js",["110"],"import axios from 'axios'\r\nimport {\r\n\tLISTING_LIST_REQUEST,\r\n\tLISTING_LIST_SUCCESS,\r\n\tLISTING_LIST_FAIL,\r\n  LISTING_DETAILS_REQUEST,\r\n  LISTING_DETAILS_SUCCESS,\r\n  LISTING_DETAILS_FAIL,\r\n  CLEAR_LISTING\r\n} from '../constants/listingConstants'\r\n\r\nexport const listListings = (data) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: LISTING_LIST_REQUEST })\r\n\r\n\t\tdispatch({\r\n\t\t\ttype    : LISTING_LIST_SUCCESS,\r\n\t\t\tpayload : data\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype    : LISTING_LIST_FAIL,\r\n\t\t\tpayload :\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const listListingDetails = (data) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LISTING_DETAILS_REQUEST})\r\n\r\n    dispatch({\r\n      type: LISTING_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n\t\t\ttype    : LISTING_DETAILS_FAIL,\r\n\t\t\tpayload :\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message\r\n\t\t})\r\n  }\r\n}\r\n\r\nexport const clearListing = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_LISTING})\r\n}\r\n","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\constants\\listingConstants.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\actions\\userActions.js",["111"],"import axios from 'axios'\r\nimport { \r\n  USER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGIN_FAIL,\r\n\tUSER_LOGOUT,\r\n} from '../constants/userConstants'\r\n\r\nexport const registerUser = (data) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype : USER_REGISTER_REQUEST\r\n\t\t})\r\n\r\n\t\tdispatch({\r\n\t\t\ttype    : USER_REGISTER_SUCCESS,\r\n\t\t\tpayload : data\r\n\t\t})\r\n\r\n\t\t// immediately login so userLogin.userInfo is avail for Header\r\n\t\tdispatch({\r\n\t\t\ttype    : USER_LOGIN_SUCCESS,\r\n\t\t\tpayload : data\r\n    })\r\n\r\n    const token = data.token\r\n    const userId = data._id\r\n\r\n    localStorage.setItem('user_id', userId);\r\n\t\tlocalStorage.setItem('token', token);\r\n    \r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype    : USER_REGISTER_FAIL,\r\n\t\t\tpayload :\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype : USER_LOGIN_REQUEST\r\n\t\t})\r\n\r\n    // // when we're sending data, we want to send the Content-Type in the headers\r\n\t\t// const config = {\r\n\t\t// \theaders : {\r\n\t\t// \t\t'Content-Type' : 'application/json'\r\n\t\t// \t}\r\n\t\t// }\r\n\r\n\t\t// const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n\r\n\t\t// dispatch({\r\n\t\t// \ttype    : USER_LOGIN_SUCCESS,\r\n\t\t// \tpayload : data\r\n\t\t// })\r\n\r\n    // when user is authenticated add to local storage so info will persist on subsequent visits\r\n\t\t// localStorage.setItem('userInfo', JSON.stringify(data))\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype    : USER_LOGIN_FAIL,\r\n\t\t\tpayload :\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n\tlocalStorage.removeItem('userInfo')\r\n\tdispatch({ type: USER_LOGOUT })\r\n}","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\constants\\userConstants.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\store.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\reducers\\userReducers.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\reducers\\listingReducers.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\graphql\\queries.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\ApolloProvider.js",["112"],"import React from 'react'\r\nimport ApolloClient from 'apollo-client'\r\n// apollo-boost is another alternative for this setup\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { ApolloProvider } from '@apollo/react-hooks'\r\nimport { setContext } from 'apollo-link-context'\r\n\r\nimport App from './App'\r\n\r\nconst httpLink = createHttpLink({\r\n\turi : '/graphql'\r\n})\r\n\r\n// middleware that will merge existing headers of the request with this headers object with Authorization to send along token with request\r\n// const authLink = setContext(() => {\r\n// \tconst token = localStorage.getItem('jwtToken')\r\n// \treturn {\r\n// \t\theaders : {\r\n// \t\t\tAuthorization : token ? `Bearer ${token}` : ''\r\n// \t\t}\r\n// \t}\r\n// })\r\n\r\nconst client = new ApolloClient({\r\n\t// add token to request\r\n\tlink  : httpLink,\r\n\t// link  : authLink.concat(httpLink),\r\n\t// this will store any cached data\r\n\tcache : new InMemoryCache()\r\n})\r\n\r\nexport default (\r\n\t<ApolloProvider client={client}>\r\n\t\t<App />\r\n\t</ApolloProvider>\r\n)\r\n","C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\graphql\\mutations.js",[],"C:\\Users\\cmcon\\Desktop\\local_web\\my_web_projects\\meezlist\\client\\src\\utils\\auth.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":5,"column":34,"nodeType":"119","messageId":"120","endLine":5,"endColumn":45},{"ruleId":"117","severity":1,"message":"121","line":13,"column":25,"nodeType":"119","messageId":"120","endLine":13,"endColumn":37},{"ruleId":"117","severity":1,"message":"122","line":13,"column":46,"nodeType":"119","messageId":"120","endLine":13,"endColumn":56},{"ruleId":"117","severity":1,"message":"123","line":7,"column":8,"nodeType":"119","messageId":"120","endLine":7,"endColumn":12},{"ruleId":"117","severity":1,"message":"121","line":13,"column":25,"nodeType":"119","messageId":"120","endLine":13,"endColumn":37},{"ruleId":"117","severity":1,"message":"122","line":13,"column":46,"nodeType":"119","messageId":"120","endLine":13,"endColumn":56},{"ruleId":"117","severity":1,"message":"124","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"117","severity":1,"message":"124","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"117","severity":1,"message":"125","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":20},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'queryLoading' is assigned a value but never used.","'queryError' is assigned a value but never used.","'Auth' is defined but never used.","'axios' is defined but never used.","'setContext' is defined but never used.","no-global-assign","no-unsafe-negation"]